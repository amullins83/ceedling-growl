/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKFSIO_H
#define _MOCKFSIO_H

#include "FSIO.h"

void MockFSIO_Init(void);
void MockFSIO_Destroy(void);
void MockFSIO_Verify(void);




#define FSInit_ExpectAndReturn(cmock_retval) FSInit_CMockExpectAndReturn(__LINE__, cmock_retval)
void FSInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define FSfopen_ExpectAndReturn(fileName, mode, cmock_retval) FSfopen_CMockExpectAndReturn(__LINE__, fileName, mode, cmock_retval)
void FSfopen_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* fileName, const char* mode, FSFILE* cmock_to_return);
#define FSfopenpgm_ExpectAndReturn(fileName, mode, cmock_retval) FSfopenpgm_CMockExpectAndReturn(__LINE__, fileName, mode, cmock_retval)
void FSfopenpgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* fileName, const rom char* mode, FSFILE* cmock_to_return);
#define FindFirstpgm_ExpectAndReturn(fileName, attr, rec, cmock_retval) FindFirstpgm_CMockExpectAndReturn(__LINE__, fileName, attr, rec, cmock_retval)
void FindFirstpgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* fileName, unsigned int attr, SearchRec* rec, int cmock_to_return);
#define FSchdirpgm_ExpectAndReturn(path, cmock_retval) FSchdirpgm_CMockExpectAndReturn(__LINE__, path, cmock_retval)
void FSchdirpgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* path, int cmock_to_return);
#define FSremovepgm_ExpectAndReturn(fileName, cmock_retval) FSremovepgm_CMockExpectAndReturn(__LINE__, fileName, cmock_retval)
void FSremovepgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* fileName, int cmock_to_return);
#define FSmkdirpgm_ExpectAndReturn(path, cmock_retval) FSmkdirpgm_CMockExpectAndReturn(__LINE__, path, cmock_retval)
void FSmkdirpgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* path, int cmock_to_return);
#define FSrmdirpgm_ExpectAndReturn(path, rmsubdirs, cmock_retval) FSrmdirpgm_CMockExpectAndReturn(__LINE__, path, rmsubdirs, cmock_retval)
void FSrmdirpgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* path, unsigned char rmsubdirs, int cmock_to_return);
#define FSrenamepgm_ExpectAndReturn(fileName, fo, cmock_retval) FSrenamepgm_CMockExpectAndReturn(__LINE__, fileName, fo, cmock_retval)
void FSrenamepgm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const rom char* fileName, FSFILE* fo, int cmock_to_return);
#define FSfclose_ExpectAndReturn(fo, cmock_retval) FSfclose_CMockExpectAndReturn(__LINE__, fo, cmock_retval)
void FSfclose_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSFILE* fo, int cmock_to_return);
#define FSrewind_Expect(fo) FSrewind_CMockExpect(__LINE__, fo)
void FSrewind_CMockExpect(UNITY_LINE_TYPE cmock_line, FSFILE* fo);
#define FSfread_ExpectAndReturn(ptr, size, n, stream, cmock_retval) FSfread_CMockExpectAndReturn(__LINE__, ptr, size, n, stream, cmock_retval)
void FSfread_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, size_t size, size_t n, FSFILE* stream, size_t cmock_to_return);
#define FSfseek_ExpectAndReturn(stream, offset, whence, cmock_retval) FSfseek_CMockExpectAndReturn(__LINE__, stream, offset, whence, cmock_retval)
void FSfseek_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSFILE* stream, long offset, int whence, int cmock_to_return);
#define FSftell_ExpectAndReturn(fo, cmock_retval) FSftell_CMockExpectAndReturn(__LINE__, fo, cmock_retval)
void FSftell_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSFILE* fo, long cmock_to_return);
#define FSfeof_ExpectAndReturn(stream, cmock_retval) FSfeof_CMockExpectAndReturn(__LINE__, stream, cmock_retval)
void FSfeof_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSFILE* stream, int cmock_to_return);
#define FSformat_ExpectAndReturn(mode, serialNumber, volumeID, cmock_retval) FSformat_CMockExpectAndReturn(__LINE__, mode, serialNumber, volumeID, cmock_retval)
void FSformat_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char mode, long int serialNumber, char* volumeID, int cmock_to_return);
#define FSattrib_ExpectAndReturn(file, attributes, cmock_retval) FSattrib_CMockExpectAndReturn(__LINE__, file, attributes, cmock_retval)
void FSattrib_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSFILE* file, unsigned char attributes, int cmock_to_return);
#define FSrename_ExpectAndReturn(fileName, fo, cmock_retval) FSrename_CMockExpectAndReturn(__LINE__, fileName, fo, cmock_retval)
void FSrename_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* fileName, FSFILE* fo, int cmock_to_return);
#define FSremove_ExpectAndReturn(fileName, cmock_retval) FSremove_CMockExpectAndReturn(__LINE__, fileName, cmock_retval)
void FSremove_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* fileName, int cmock_to_return);
#define FSfwrite_ExpectAndReturn(ptr, size, n, stream, cmock_retval) FSfwrite_CMockExpectAndReturn(__LINE__, ptr, size, n, stream, cmock_retval)
void FSfwrite_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const void* ptr, size_t size, size_t n, FSFILE* stream, size_t cmock_to_return);
#define FSchdir_ExpectAndReturn(path, cmock_retval) FSchdir_CMockExpectAndReturn(__LINE__, path, cmock_retval)
void FSchdir_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* path, int cmock_to_return);
#define FSgetcwd_ExpectAndReturn(path, numbchars, cmock_retval) FSgetcwd_CMockExpectAndReturn(__LINE__, path, numbchars, cmock_retval)
void FSgetcwd_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* path, int numbchars, char* cmock_to_return);
#define FSmkdir_ExpectAndReturn(path, cmock_retval) FSmkdir_CMockExpectAndReturn(__LINE__, path, cmock_retval)
void FSmkdir_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* path, int cmock_to_return);
#define FSrmdir_ExpectAndReturn(path, rmsubdirs, cmock_retval) FSrmdir_CMockExpectAndReturn(__LINE__, path, rmsubdirs, cmock_retval)
void FSrmdir_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* path, unsigned char rmsubdirs, int cmock_to_return);
#define SetClockVars_ExpectAndReturn(year, month, day, hour, minute, second, cmock_retval) SetClockVars_CMockExpectAndReturn(__LINE__, year, month, day, hour, minute, second, cmock_retval)
void SetClockVars_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int year, unsigned char month, unsigned char day, unsigned char hour, unsigned char minute, unsigned char second, int cmock_to_return);
#define FindFirst_ExpectAndReturn(fileName, attr, rec, cmock_retval) FindFirst_CMockExpectAndReturn(__LINE__, fileName, attr, rec, cmock_retval)
void FindFirst_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* fileName, unsigned int attr, SearchRec* rec, int cmock_to_return);
#define FindNext_ExpectAndReturn(rec, cmock_retval) FindNext_CMockExpectAndReturn(__LINE__, rec, cmock_retval)
void FindNext_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, SearchRec* rec, int cmock_to_return);
#define FSfprintf_ExpectAndReturn(fptr, fmt, cmock_retval) FSfprintf_CMockExpectAndReturn(__LINE__, fptr, fmt, cmock_retval)
void FSfprintf_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSFILE* fptr, const rom char* fmt, int cmock_to_return);
#define FSerror_ExpectAndReturn(cmock_retval) FSerror_CMockExpectAndReturn(__LINE__, cmock_retval)
void FSerror_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define FSCreateMBR_ExpectAndReturn(firstSector, numSectors, cmock_retval) FSCreateMBR_CMockExpectAndReturn(__LINE__, firstSector, numSectors, cmock_retval)
void FSCreateMBR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned long firstSector, unsigned long numSectors, int cmock_to_return);
#define FSGetDiskProperties_Expect(properties) FSGetDiskProperties_CMockExpect(__LINE__, properties)
void FSGetDiskProperties_CMockExpect(UNITY_LINE_TYPE cmock_line, FS_DISK_PROPERTIES* properties);

#endif
