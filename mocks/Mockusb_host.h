/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKUSB_HOST_H
#define _MOCKUSB_HOST_H

#include "usb_host.h"

void Mockusb_host_Init(void);
void Mockusb_host_Destroy(void);
void Mockusb_host_Verify(void);




#define USB_HOST_APP_EVENT_HANDLER_ExpectAndReturn(address, event, data, size, cmock_retval) USB_HOST_APP_EVENT_HANDLER_CMockExpectAndReturn(__LINE__, address, event, data, size, cmock_retval)
void USB_HOST_APP_EVENT_HANDLER_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE address, USB_EVENT event, void* data, DWORD size, BOOL cmock_to_return);
#define USBHostClearEndpointErrors_ExpectAndReturn(deviceAddress, endpoint, cmock_retval) USBHostClearEndpointErrors_CMockExpectAndReturn(__LINE__, deviceAddress, endpoint, cmock_retval)
void USBHostClearEndpointErrors_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE endpoint, BYTE cmock_to_return);
#define USBHostDeviceSpecificClientDriver_ExpectAndReturn(deviceAddress, cmock_retval) USBHostDeviceSpecificClientDriver_CMockExpectAndReturn(__LINE__, deviceAddress, cmock_retval)
void USBHostDeviceSpecificClientDriver_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BOOL cmock_to_return);
#define USBHostDeviceStatus_ExpectAndReturn(deviceAddress, cmock_retval) USBHostDeviceStatus_CMockExpectAndReturn(__LINE__, deviceAddress, cmock_retval)
void USBHostDeviceStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE cmock_to_return);
#define USBHostInit_ExpectAndReturn(flags, cmock_retval) USBHostInit_CMockExpectAndReturn(__LINE__, flags, cmock_retval)
void USBHostInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned long flags, BOOL cmock_to_return);
#define USBHostIsochronousBuffersCreate_ExpectAndReturn(isocData, numberOfBuffers, bufferSize, cmock_retval) USBHostIsochronousBuffersCreate_CMockExpectAndReturn(__LINE__, isocData, numberOfBuffers, bufferSize, cmock_retval)
void USBHostIsochronousBuffersCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ISOCHRONOUS_DATA* isocData, BYTE numberOfBuffers, WORD bufferSize, BOOL cmock_to_return);
#define USBHostIsochronousBuffersDestroy_Expect(isocData, numberOfBuffers) USBHostIsochronousBuffersDestroy_CMockExpect(__LINE__, isocData, numberOfBuffers)
void USBHostIsochronousBuffersDestroy_CMockExpect(UNITY_LINE_TYPE cmock_line, ISOCHRONOUS_DATA* isocData, BYTE numberOfBuffers);
#define USBHostIsochronousBuffersReset_Expect(isocData, numberOfBuffers) USBHostIsochronousBuffersReset_CMockExpect(__LINE__, isocData, numberOfBuffers)
void USBHostIsochronousBuffersReset_CMockExpect(UNITY_LINE_TYPE cmock_line, ISOCHRONOUS_DATA* isocData, BYTE numberOfBuffers);
#define USBHostIssueDeviceRequest_ExpectAndReturn(deviceAddress, bmRequestType, bRequest, wValue, wIndex, wLength, data, dataDirection, clientDriverID, cmock_retval) USBHostIssueDeviceRequest_CMockExpectAndReturn(__LINE__, deviceAddress, bmRequestType, bRequest, wValue, wIndex, wLength, data, dataDirection, clientDriverID, cmock_retval)
void USBHostIssueDeviceRequest_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE bmRequestType, BYTE bRequest, WORD wValue, WORD wIndex, WORD wLength, BYTE* data, BYTE dataDirection, BYTE clientDriverID, BYTE cmock_to_return);
#define USBHostRead_ExpectAndReturn(deviceAddress, endpoint, data, size, cmock_retval) USBHostRead_CMockExpectAndReturn(__LINE__, deviceAddress, endpoint, data, size, cmock_retval)
void USBHostRead_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE endpoint, BYTE* data, DWORD size, BYTE cmock_to_return);
#define USBHostResetDevice_ExpectAndReturn(deviceAddress, cmock_retval) USBHostResetDevice_CMockExpectAndReturn(__LINE__, deviceAddress, cmock_retval)
void USBHostResetDevice_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE cmock_to_return);
#define USBHostResumeDevice_ExpectAndReturn(deviceAddress, cmock_retval) USBHostResumeDevice_CMockExpectAndReturn(__LINE__, deviceAddress, cmock_retval)
void USBHostResumeDevice_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE cmock_to_return);
#define USBHostSetDeviceConfiguration_ExpectAndReturn(deviceAddress, configuration, cmock_retval) USBHostSetDeviceConfiguration_CMockExpectAndReturn(__LINE__, deviceAddress, configuration, cmock_retval)
void USBHostSetDeviceConfiguration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE configuration, BYTE cmock_to_return);
#define USBHostSetNAKTimeout_ExpectAndReturn(deviceAddress, endpoint, flags, timeoutCount, cmock_retval) USBHostSetNAKTimeout_CMockExpectAndReturn(__LINE__, deviceAddress, endpoint, flags, timeoutCount, cmock_retval)
void USBHostSetNAKTimeout_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE endpoint, WORD flags, WORD timeoutCount, BYTE cmock_to_return);
#define USBHostShutdown_Expect() USBHostShutdown_CMockExpect(__LINE__)
void USBHostShutdown_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define USBHostSuspendDevice_ExpectAndReturn(deviceAddress, cmock_retval) USBHostSuspendDevice_CMockExpectAndReturn(__LINE__, deviceAddress, cmock_retval)
void USBHostSuspendDevice_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE cmock_to_return);
#define USBHostTasks_Expect() USBHostTasks_CMockExpect(__LINE__)
void USBHostTasks_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define USBHostTerminateTransfer_Expect(deviceAddress, endpoint) USBHostTerminateTransfer_CMockExpect(__LINE__, deviceAddress, endpoint)
void USBHostTerminateTransfer_CMockExpect(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE endpoint);
#define USBHostTransferIsComplete_ExpectAndReturn(deviceAddress, endpoint, errorCode, byteCount, cmock_retval) USBHostTransferIsComplete_CMockExpectAndReturn(__LINE__, deviceAddress, endpoint, errorCode, byteCount, cmock_retval)
void USBHostTransferIsComplete_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE endpoint, BYTE* errorCode, DWORD* byteCount, BOOL cmock_to_return);
#define USBHostVbusEvent_ExpectAndReturn(vbusEvent, hubAddress, portNumber, cmock_retval) USBHostVbusEvent_CMockExpectAndReturn(__LINE__, vbusEvent, hubAddress, portNumber, cmock_retval)
void USBHostVbusEvent_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, USB_EVENT vbusEvent, BYTE hubAddress, BYTE portNumber, BYTE cmock_to_return);
#define USBHostWrite_ExpectAndReturn(deviceAddress, endpoint, data, size, cmock_retval) USBHostWrite_CMockExpectAndReturn(__LINE__, deviceAddress, endpoint, data, size, cmock_retval)
void USBHostWrite_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BYTE deviceAddress, BYTE endpoint, BYTE* data, DWORD size, BYTE cmock_to_return);

#endif
