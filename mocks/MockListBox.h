/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKLISTBOX_H
#define _MOCKLISTBOX_H

#include "ListBox.h"

void MockListBox_Init(void);
void MockListBox_Destroy(void);
void MockListBox_Verify(void);




#define LbCreate_ExpectAndReturn(ID, left, top, right, bottom, state, pText, pScheme, cmock_retval) LbCreate_CMockExpectAndReturn(__LINE__, ID, left, top, right, bottom, state, pText, pScheme, cmock_retval)
void LbCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, WORD ID, SHORT left, SHORT top, SHORT right, SHORT bottom, WORD state, XCHAR* pText, GOL_SCHEME* pScheme, LISTBOX* cmock_to_return);
#define LbAddItem_ExpectAndReturn(pLb, pPrevItem, pText, pBitmap, status, data, cmock_retval) LbAddItem_CMockExpectAndReturn(__LINE__, pLb, pPrevItem, pText, pBitmap, status, data, cmock_retval)
void LbAddItem_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, LISTITEM* pPrevItem, XCHAR* pText, void* pBitmap, WORD status, WORD data, LISTITEM* cmock_to_return);
#define LbDelItem_Expect(pLb, pItem) LbDelItem_CMockExpect(__LINE__, pLb, pItem)
void LbDelItem_CMockExpect(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, LISTITEM* pItem);
#define LbDelItemsList_Expect(pLb) LbDelItemsList_CMockExpect(__LINE__, pLb)
void LbDelItemsList_CMockExpect(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb);
#define LbGetSel_ExpectAndReturn(pLb, pFromItem, cmock_retval) LbGetSel_CMockExpectAndReturn(__LINE__, pLb, pFromItem, cmock_retval)
void LbGetSel_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, LISTITEM* pFromItem, LISTITEM* cmock_to_return);
#define LbChangeSel_Expect(pLb, pItem) LbChangeSel_CMockExpect(__LINE__, pLb, pItem)
void LbChangeSel_CMockExpect(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, LISTITEM* pItem);
#define LbSetFocusedItem_Expect(pLb, index) LbSetFocusedItem_CMockExpect(__LINE__, pLb, index)
void LbSetFocusedItem_CMockExpect(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, SHORT index);
#define LbGetFocusedItem_ExpectAndReturn(pLb, cmock_retval) LbGetFocusedItem_CMockExpectAndReturn(__LINE__, pLb, cmock_retval)
void LbGetFocusedItem_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, SHORT cmock_to_return);
#define LbTranslateMsg_ExpectAndReturn(pLb, pMsg, cmock_retval) LbTranslateMsg_CMockExpectAndReturn(__LINE__, pLb, pMsg, cmock_retval)
void LbTranslateMsg_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, GOL_MSG* pMsg, WORD cmock_to_return);
#define LbMsgDefault_Expect(translatedMsg, pLb, pMsg) LbMsgDefault_CMockExpect(__LINE__, translatedMsg, pLb, pMsg)
void LbMsgDefault_CMockExpect(UNITY_LINE_TYPE cmock_line, WORD translatedMsg, LISTBOX* pLb, GOL_MSG* pMsg);
#define LbDraw_ExpectAndReturn(pLb, cmock_retval) LbDraw_CMockExpectAndReturn(__LINE__, pLb, cmock_retval)
void LbDraw_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, LISTBOX* pLb, WORD cmock_to_return);

#endif
