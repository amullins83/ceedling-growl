/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKRUNNINGAVERAGE_H
#define _MOCKRUNNINGAVERAGE_H

#include "RunningAverage.h"

void MockRunningAverage_Init(void);
void MockRunningAverage_Destroy(void);
void MockRunningAverage_Verify(void);




#define newDefaultRunningAverage_ExpectAndReturn(cmock_retval) newDefaultRunningAverage_CMockExpectAndReturn(__LINE__, cmock_retval)
void newDefaultRunningAverage_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* cmock_to_return);
#define newRunningAverage_ExpectAndReturn(initialAverage, sampleRate, minTime, maxTime, maxCountsPerSecond, cmock_retval) newRunningAverage_CMockExpectAndReturn(__LINE__, initialAverage, sampleRate, minTime, maxTime, maxCountsPerSecond, cmock_retval)
void newRunningAverage_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, float initialAverage, int sampleRate, int minTime, int maxTime, int maxCountsPerSecond, RunningAverage* cmock_to_return);
#define initDefaultRunningAverage_Expect(ra) initDefaultRunningAverage_CMockExpect(__LINE__, ra)
void initDefaultRunningAverage_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra);
#define initRunningAverage_Expect(ra, initialAverage, sampleRate, minTime, maxTime, maxCountsPerSecond) initRunningAverage_CMockExpect(__LINE__, ra, initialAverage, sampleRate, minTime, maxTime, maxCountsPerSecond)
void initRunningAverage_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, float initialAverage, int sampleRate, int minTime, int maxTime, int maxCountsPerSecond);
#define runningAverageGetNewSample_ExpectAndReturn(ra, cmock_retval) runningAverageGetNewSample_CMockExpectAndReturn(__LINE__, ra, cmock_retval)
void runningAverageGetNewSample_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int cmock_to_return);
#define runningAverageSetNewSample_Expect(ra, sample) runningAverageSetNewSample_CMockExpect(__LINE__, ra, sample)
void runningAverageSetNewSample_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int sample);
#define runningAverageGetAverage_ExpectAndReturn(ra, cmock_retval) runningAverageGetAverage_CMockExpectAndReturn(__LINE__, ra, cmock_retval)
void runningAverageGetAverage_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, float cmock_to_return);
#define runningAverageCalcNewSampleWeight_ExpectAndReturn(ra, cmock_retval) runningAverageCalcNewSampleWeight_CMockExpectAndReturn(__LINE__, ra, cmock_retval)
void runningAverageCalcNewSampleWeight_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int cmock_to_return);
#define runningAverageSetSampleRate_Expect(ra, rate) runningAverageSetSampleRate_CMockExpect(__LINE__, ra, rate)
void runningAverageSetSampleRate_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int rate);
#define runningAverageSetMaxTime_Expect(ra, max) runningAverageSetMaxTime_CMockExpect(__LINE__, ra, max)
void runningAverageSetMaxTime_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int max);
#define runningAverageSetMinTime_Expect(ra, min) runningAverageSetMinTime_CMockExpect(__LINE__, ra, min)
void runningAverageSetMinTime_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int min);
#define runningAverageGetBackgroundCountsPerSecond_ExpectAndReturn(ra, cmock_retval) runningAverageGetBackgroundCountsPerSecond_CMockExpectAndReturn(__LINE__, ra, cmock_retval)
void runningAverageGetBackgroundCountsPerSecond_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int cmock_to_return);
#define runningAverageSetBackgroundCountsPerSecond_Expect(ra, background) runningAverageSetBackgroundCountsPerSecond_CMockExpect(__LINE__, ra, background)
void runningAverageSetBackgroundCountsPerSecond_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int background);
#define runningAverageGetMaxCountsPerSecond_ExpectAndReturn(ra, cmock_retval) runningAverageGetMaxCountsPerSecond_CMockExpectAndReturn(__LINE__, ra, cmock_retval)
void runningAverageGetMaxCountsPerSecond_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int cmock_to_return);
#define runningAverageSetMaxCountsPerSecond_Expect(ra, max) runningAverageSetMaxCountsPerSecond_CMockExpect(__LINE__, ra, max)
void runningAverageSetMaxCountsPerSecond_CMockExpect(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int max);
#define runningAverageCalcNumSpeeds_ExpectAndReturn(ra, cmock_retval) runningAverageCalcNumSpeeds_CMockExpectAndReturn(__LINE__, ra, cmock_retval)
void runningAverageCalcNumSpeeds_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RunningAverage* ra, int cmock_to_return);

#endif
